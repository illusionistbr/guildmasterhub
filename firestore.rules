rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own profile.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /guilds/{guildId} {
      // Anyone authenticated can create a guild or see the list of public guilds.
      allow list, create: if request.auth != null;
      
      // Only members of the guild can get the full guild document for reads.
      allow get: if request.auth.uid in get(/databases/$(database)/documents/guilds/$(guildId)).data.memberIds;

      // Only members can update the guild doc (in-app permissions handle specifics).
      allow update: if request.auth.uid in get(/databases/$(database)/documents/guilds/$(guildId)).data.memberIds;
      
      // Only the owner can delete the guild.
      allow delete: if request.auth.uid == resource.data.ownerId;

      // --- Subcollections ---
      
      // To allow the app to query lists of items (like the bank or events), we must allow any 
      // authenticated user to READ subcollections. The app's UI already restricts access to these pages
      // to guild members, ensuring data is only shown to authorized users.
      // This is necessary because `list` rules cannot depend on a `get` to another document.
      match /{subcollection}/{docId=**} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid in get(/databases/$(database)/documents/guilds/$(guildId)).data.memberIds;
      }
      
      // A specific override for applications is needed to allow non-members to create them.
       match /applications/{appId} {
        allow create: if request.auth != null;
      }
    }
  }
}


rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Coleção de Guildas
    match /guilds/{guildId} {

      // --- QUEM PODE LER DADOS DA GUILDA? ---
      allow read: if request.auth != null;

      // --- QUEM PODE CRIAR UMA NOVA GUILDA? ---
      allow create: if request.auth != null
                    && request.resource.data.name is string
                    && request.resource.data.name.size() >= 3
                    && request.resource.data.name.size() <= 50
                    && request.resource.data.ownerId == request.auth.uid
                    && request.resource.data.ownerDisplayName is string
                    && request.resource.data.createdAt == request.time
                    && request.resource.data.memberCount == 1
                    && request.resource.data.memberIds is list
                    && request.resource.data.memberIds.size() == 1
                    && request.auth.uid in request.resource.data.memberIds
                    && request.resource.data.isOpen is bool
                    // Validação do novo campo roles
                    && request.resource.data.roles is map
                    && request.resource.data.roles.size() == 1
                    && request.auth.uid in request.resource.data.roles
                    && request.resource.data.roles[request.auth.uid] == "Líder"
                    // Campos opcionais e suas validações
                    && (!('description' in request.resource.data) || (
                        request.resource.data.description is string
                        && request.resource.data.description.size() <= 500
                       ))
                    && (!('game' in request.resource.data) || (
                        request.resource.data.game is string
                        && request.resource.data.game.size() <= 50
                       ))
                    && (!('password' in request.resource.data) || (
                        request.resource.data.password is string
                        && request.resource.data.password.size() <= 50
                       ))
                    && (!('bannerUrl' in request.resource.data) || (
                        request.resource.data.bannerUrl is string
                        && request.resource.data.bannerUrl.size() <= 1048576 // ~1MB para data URIs
                       ))
                    && (!('logoUrl' in request.resource.data) || (
                        request.resource.data.logoUrl is string
                        && request.resource.data.logoUrl.size() <= 524288 // ~500KB para data URIs
                       ))
                    && (!('socialLinks' in request.resource.data) || (
                        request.resource.data.socialLinks is map &&
                        (!('facebook' in request.resource.data.socialLinks) || request.resource.data.socialLinks.facebook is string) &&
                        (!('x' in request.resource.data.socialLinks) || request.resource.data.socialLinks.x is string) &&
                        (!('youtube' in request.resource.data.socialLinks) || request.resource.data.socialLinks.youtube is string) &&
                        (!('discord' in request.resource.data.socialLinks) || request.resource.data.socialLinks.discord is string)
                       ));

      // --- QUEM PODE ATUALIZAR UMA GUILDA EXISTENTE? ---
      allow update: if request.auth != null && (
                      // CENÁRIO 1: Dono da guilda atualizando informações (banner, logo, descrição, etc.)
                      (
                        resource.data.ownerId == request.auth.uid &&
                        request.resource.data.ownerId == resource.data.ownerId &&
                        request.resource.data.createdAt == resource.data.createdAt &&
                        request.resource.data.name is string && request.resource.data.name.size() >= 3 && request.resource.data.name.size() <= 50 &&
                        request.resource.data.ownerDisplayName is string &&
                        request.resource.data.isOpen is bool &&
                        // O dono pode gerenciar o campo 'roles'. A lógica específica de quem pode mudar qual role seria mais complexa.
                        // Por agora, permitimos que o dono modifique o mapa de roles.
                        // A validação de que o dono não pode remover a si mesmo de "Líder" sem transferir liderança
                        // seria uma regra mais avançada ou lógica de backend.
                        request.resource.data.roles is map &&
                        (!('description' in request.resource.data) || (request.resource.data.description is string && request.resource.data.description.size() <= 500)) &&
                        (!('game' in request.resource.data) || (request.resource.data.game is string && request.resource.data.game.size() <= 50)) &&
                        (!('password' in request.resource.data) || (request.resource.data.password is string && request.resource.data.password.size() <= 50)) &&
                        (!('bannerUrl' in request.resource.data) || (request.resource.data.bannerUrl is string && request.resource.data.bannerUrl.size() <= 1048576)) &&
                        (!('logoUrl' in request.resource.data) || (request.resource.data.logoUrl is string && request.resource.data.logoUrl.size() <= 524288)) &&
                        (!('socialLinks' in request.resource.data) || (
                            request.resource.data.socialLinks is map &&
                            (!('facebook' in request.resource.data.socialLinks) || request.resource.data.socialLinks.facebook is string) &&
                            (!('x' in request.resource.data.socialLinks) || request.resource.data.socialLinks.x is string) &&
                            (!('youtube' in request.resource.data.socialLinks) || request.resource.data.socialLinks.youtube is string) &&
                            (!('discord' in request.resource.data.socialLinks) || request.resource.data.socialLinks.discord is string)
                        )) &&
                        // Se o dono está gerenciando membros e roles, essas verificações precisam ser mais flexíveis
                        // ou usar affectedKeys para ser mais preciso.
                        // Para esta regra genérica de update pelo dono, vamos permitir que ele altere memberIds e memberCount também.
                        // Operações específicas de "join/leave" têm suas próprias validações abaixo.
                        request.resource.data.memberIds is list &&
                        request.resource.data.memberCount is number
                        // Exemplo com affectedKeys (mais seguro para updates gerais pelo owner):
                        // && request.resource.data.diff(resource.data).affectedKeys().hasOnly([
                        //      'name', 'description', 'game', 'password', 'isOpen',
                        //      'bannerUrl', 'logoUrl', 'socialLinks', 'ownerDisplayName', 'roles', 'tags',
                        //      'memberIds', 'memberCount' // Se o dono puder gerenciar membros diretamente aqui
                        //    ])
                      ) ||
                      // CENÁRIO 2: Usuário se juntando a uma guilda
                      (
                        request.auth.uid != resource.data.ownerId &&
                        !(request.auth.uid in resource.data.memberIds) &&
                        request.resource.data.memberIds == resource.data.memberIds.concat([request.auth.uid]) &&
                        request.resource.data.memberCount == resource.data.memberCount + 1 &&
                        // Garante que outros campos, incluindo 'roles', não sejam alterados nesta operação.
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['memberIds', 'memberCount']) &&
                        request.resource.data.name == resource.data.name &&
                        request.resource.data.description == resource.data.description &&
                        request.resource.data.ownerId == resource.data.ownerId &&
                        request.resource.data.ownerDisplayName == resource.data.ownerDisplayName &&
                        request.resource.data.game == resource.data.game &&
                        request.resource.data.password == resource.data.password &&
                        request.resource.data.isOpen == resource.data.isOpen &&
                        request.resource.data.bannerUrl == resource.data.bannerUrl &&
                        request.resource.data.logoUrl == resource.data.logoUrl &&
                        request.resource.data.socialLinks == resource.data.socialLinks &&
                        request.resource.data.createdAt == resource.data.createdAt &&
                        request.resource.data.roles == resource.data.roles // Roles não muda ao entrar
                      )
                    );

      // --- QUEM PODE EXCLUIR UMA GUILDA? ---
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }
  }
}
